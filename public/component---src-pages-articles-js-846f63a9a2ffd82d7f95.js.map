{"version":3,"file":"component---src-pages-articles-js-846f63a9a2ffd82d7f95.js","mappings":"gNAYA,MAAMA,EAAIC,EAAQ,MAEH,SAASC,IACtB,MAQMC,GARQC,EAAAA,EAAAA,gBAAe,aAQVC,kBAAkBC,SAE/BC,EAAQ,CACZC,OAAQC,EAAAA,IACRC,IAAKC,EAAAA,IACLC,IAAKC,EAAAA,IACLC,OAAQC,EAAAA,IACRC,OAAQC,EAAAA,IACRC,QAASC,EAAAA,KAGX,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACGjB,EAAKkB,KAAKC,GACTF,EAAAA,cAACG,EAAAA,KAAI,CACHC,GAAE,SAAWxB,EAAEyB,UAAUH,GAAI,IAC7BI,UAAS,OAAS1B,EAAEyB,UAAUH,GAC9BK,IAAKL,GAELF,EAAAA,cAACQ,EAAAA,EAAe,CAACC,KAAMtB,EAAMe,KAC5BA,KAKX,C,yDC/C6B,IAEvBQ,EAAW,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,MAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAA,IAAAI,EAAAL,EAAAM,UAkCd,OAlCcD,EACfE,YAAA,WACE,MAAM,UAAEC,GAAcC,KAAKC,MACrBC,EAAW,GAWjB,OATAH,EAAUI,SAAQC,IAChBF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,MAAON,EAASG,KAAKI,YAAYD,MACjCE,QAASR,EAASG,KAAKI,YAAYC,QACnCC,KAAMT,EAASG,KAAKI,YAAYE,MAChC,IAGGX,CACT,EAACN,EAEDkB,OAAA,WACE,MAAMZ,EAAWF,KAAKF,cAEtB,OACEjB,EAAAA,cAAAA,EAAAA,SAAA,KACGqB,EAASpB,KAAIiC,GACZlC,EAAAA,cAAA,WAASmC,MAAM,aACbnC,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAI8B,EAAKT,KAAMlB,IAAK2B,EAAKL,OAC7B7B,EAAAA,cAAA,OAAKmC,MAAM,iBACTnC,EAAAA,cAAA,UAAKkC,EAAKL,OACV7B,EAAAA,cAAA,YAAOkC,EAAKF,WAO1B,EAACtB,CAAA,CAlCc,CAAS0B,EAAAA,WAqC1B,K,oFCVA,UAvBoBC,IAAe,IAAd,KAAEC,GAAMD,EAC3B,MAAMnB,EAAYoB,EAAKrD,kBAAkBsD,MAEzC,OACEvC,EAAAA,cAACwC,EAAAA,EAAM,KACLxC,EAAAA,cAACyC,EAAAA,EAAG,CAACZ,MAAM,aACX7B,EAAAA,cAAA,eACEA,EAAAA,cAAA,OAAKM,UAAU,aACbN,EAAAA,cAAA,cACEA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,OAAKM,UAAU,gBACbN,EAAAA,cAAClB,EAAAA,EAAY,QAGjBkB,EAAAA,cAAA,eACEA,EAAAA,cAACU,EAAAA,EAAW,CAACQ,UAAWA,OAIvB,C","sources":["webpack://gatsby-starter-default/./src/components/distinct-tags.js","webpack://gatsby-starter-default/./src/components/post-listing.js","webpack://gatsby-starter-default/./src/pages/articles.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGithub,\n  faPython,\n  faDev,\n  faGoogle,\n  faJava,\n  faBitcoin,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst _ = require(\"lodash\");\n\nexport default function DistinctTags() {\n  const query = useStaticQuery(graphql`\n    {\n      allMarkdownRemark {\n        distinct(field: { frontmatter: { tags: SELECT } })\n      }\n    }\n  `);\n\n  const tags = query.allMarkdownRemark.distinct;\n\n  const icons = {\n    Python: faPython,\n    Dev: faDev,\n    Jvm: faJava,\n    Google: faGoogle,\n    Github: faGithub,\n    Bitcoin: faBitcoin,\n  };\n\n  return (\n    <>\n      {tags.map((tag) => (\n        <Link\n          to={`/tags/${_.kebabCase(tag)}/`}\n          className={`tag ${_.kebabCase(tag)}`}\n          key={tag}\n        >\n          <FontAwesomeIcon icon={icons[tag]} />\n          {tag}\n        </Link>\n      ))}\n    </>\n  );\n}\n","import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\n\nclass PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = []\n\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        title: postEdge.node.frontmatter.title,\n        summary: postEdge.node.frontmatter.summary,\n        date: postEdge.node.frontmatter.date,\n      })\n    })\n\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n\n    return (\n      <>\n        {postList.map(post => (\n          <article class=\"post-item\">\n            <Link to={post.path} key={post.title}>\n              <div class=\"flex post-row\">\n                <h3>{post.title}</h3>\n                <time>{post.date}</time>\n              </div>\n            </Link>\n          </article>\n        ))}\n      </>\n    )\n  }\n}\n\nexport default PostListing\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport PostListing from \"../components/post-listing\";\nimport { graphql } from \"gatsby\";\nimport DistinctTags from \"../components/distinct-tags\";\n\nconst ArticlePage = ({ data }) => {\n  const postEdges = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <SEO title=\"Articles\" />\n      <section>\n        <div className=\"container\">\n          <header>\n            <h1>Articles</h1>\n            <div className=\"flex-wrapped\">\n              <DistinctTags />\n            </div>\n          </header>\n          <section>\n            <PostListing postEdges={postEdges} />\n          </section>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default ArticlePage;\n\nexport const query = graphql`\n  query PageQuery {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { fileAbsolutePath: { regex: \"*/content/blog/\" } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_","require","DistinctTags","tags","useStaticQuery","allMarkdownRemark","distinct","icons","Python","faPython","Dev","faDev","Jvm","faJava","Google","faGoogle","Github","faGithub","Bitcoin","faBitcoin","React","map","tag","Link","to","kebabCase","className","key","FontAwesomeIcon","icon","PostListing","_Component","apply","arguments","_inheritsLoose","_proto","prototype","getPostList","postEdges","this","props","postList","forEach","postEdge","push","path","node","fields","slug","title","frontmatter","summary","date","render","post","class","Component","_ref","data","edges","Layout","SEO"],"sourceRoot":""}