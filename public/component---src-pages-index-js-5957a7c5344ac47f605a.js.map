{"version":3,"file":"component---src-pages-index-js-5957a7c5344ac47f605a.js","mappings":"0NAMA,MAAMA,EAAIC,EAAQ,MAEH,SAASC,IACpB,MAQMC,GARQC,EAAAA,EAAAA,gBAAe,cAQVC,kBAAkBC,SAE/BC,EAAQ,CACV,OAAUC,EAAAA,IACV,OAAUC,EAAAA,IACV,aAAcC,EAAAA,IACd,OAAUC,EAAAA,IACV,KAAQC,EAAAA,IACR,SAAYC,EAAAA,IACZ,WAAcC,EAAAA,KAGlB,OACI,gCAEIX,EAAKY,KAAIC,GACL,gBAAC,EAAAC,KAAI,CACLC,GAAE,SAAWlB,EAAEmB,UAAUH,GAAI,IAC7BI,UAAS,OAASpB,EAAEmB,UAAUH,GAC9BK,IAAKL,GAAK,gBAAC,IAAe,CAACM,KAAMf,EAAMS,KAASA,KAKhE,C,yDCxC6B,IAEvBO,EAAW,6FAkCd,OAlCc,EACfC,YAAA,WACE,MAAM,UAAEC,GAAcC,KAAKC,MACrBC,EAAW,GAWjB,OATAH,EAAUI,SAAQC,IAChBF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,MAAON,EAASG,KAAKI,YAAYD,MACjCE,QAASR,EAASG,KAAKI,YAAYC,QACnCC,KAAMT,EAASG,KAAKI,YAAYE,MAChC,IAGGX,CACT,EAAC,EAEDY,OAAA,WACE,MAAMZ,EAAWF,KAAKF,cAEtB,OACE,gCACGI,EAASb,KAAI0B,GACZ,2BAASC,MAAM,aACb,gBAAC,EAAAzB,KAAI,CAACC,GAAIuB,EAAKT,KAAMX,IAAKoB,EAAKL,OAC7B,uBAAKM,MAAM,iBACT,0BAAKD,EAAKL,OACV,4BAAOK,EAAKF,WAO1B,EAAC,EAlCc,CAASI,EAAAA,WAqC1B,K,8FCWA,UA3CkB,IAAe,IAAd,KAAEC,GAAM,EACzB,MAAMnB,EAAYmB,EAAKvC,kBAAkBwC,MAEzC,OACE,gBAAC,IAAM,KACL,gBAAC,IAAG,CAACT,MAAM,SAGX,2BAASM,MAAM,gBACb,uBAAKA,MAAM,aACT,0BAAI,mBACJ,yBAAG,+JAIH,yBAAG,wBACoB,gBAAC,EAAAzB,KAAI,CAACC,GAAG,cAAa,SAAY,MAAI,IAC3D,gBAAC,EAAAD,KAAI,CAACC,GAAG,aAAY,gBAAmB,OAM9C,+BACE,uBAAKwB,MAAM,aACT,0BAAI,UACJ,gBAAC,IAAW,CAACjB,UAAWA,MAK5B,+BACE,uBAAKiB,MAAM,aACT,0BAAI,WACJ,uBAAKA,MAAM,6BACT,gBAAC,IAAY,SAIZ,C","sources":["webpack://gatsby-starter-default/./src/components/distinct-tags.js","webpack://gatsby-starter-default/./src/components/post-listing.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCode, faComment, faDatabase, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub, faPython, faReact} from \"@fortawesome/free-brands-svg-icons\"\n\nconst _ = require(\"lodash\");\n\nexport default function DistinctTags() {\n    const query = useStaticQuery(graphql`\n    {\n    allMarkdownRemark {\n      distinct(field: frontmatter___tags)\n        }\n    }\n    `)\n\n    const tags = query.allMarkdownRemark.distinct;\n\n    const icons = {\n        \"Github\": faGithub,\n        \"Python\": faPython,\n        \"SQL Server\": faDatabase,\n        \"Gatsby\": faReact,\n        \"Site\": faInfoCircle,\n        \"Snippets\": faCode,\n        \"Discussion\": faComment,\n    }\n\n    return (\n        <>\n        {\n            tags.map(tag => (\n                <Link \n                to={`/tags/${_.kebabCase(tag)}/`}\n                className={`tag ${_.kebabCase(tag)}`}\n                key={tag}><FontAwesomeIcon icon={icons[tag]} />{tag}</Link>\n            ))\n        }\n        </>\n    )\n}\n\n","import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\n\nclass PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = []\n\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        title: postEdge.node.frontmatter.title,\n        summary: postEdge.node.frontmatter.summary,\n        date: postEdge.node.frontmatter.date,\n      })\n    })\n\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n\n    return (\n      <>\n        {postList.map(post => (\n          <article class=\"post-item\">\n            <Link to={post.path} key={post.title}>\n              <div class=\"flex post-row\">\n                <h3>{post.title}</h3>\n                <time>{post.date}</time>\n              </div>\n            </Link>\n          </article>\n        ))}\n      </>\n    )\n  }\n}\n\nexport default PostListing\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { graphql, Link } from \"gatsby\"\nimport PostListing from \"../components/post-listing\"\nimport DistinctTags from \"../components/distinct-tags\"\n\nconst IndexPage = ({ data }) => {\n  const postEdges = data.allMarkdownRemark.edges\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n\n      {/* Intro Hero */}\n      <section class=\"introduction\">\n        <div class=\"container\">\n          <h1>Hi, I'm Faouzi.</h1>\n          <p>\n            I'm a Machine learning engineer. I'll try to keep track of my journey if this field\n            and will share some tecnical details, learnings and interests with you.\n          </p>\n          <p>\n            Feel free to read my <Link to=\"/articles/\">posts</Link> or{\" \"}\n            <Link to=\"/contact/\">get in touch</Link>.\n          </p>\n        </div>\n      </section>\n\n      {/* Latest Articles */}\n      <section>\n        <div class=\"container\">\n          <h2>Latest</h2>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </section>\n\n      {/* Topics */}\n      <section>\n        <div class=\"container\">\n          <h2>Explore</h2>\n          <div class=\"flex-wrapped article-tags\">\n            <DistinctTags />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"*/content/blog/\" } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMM\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_","require","DistinctTags","tags","useStaticQuery","allMarkdownRemark","distinct","icons","faGithub","faPython","faDatabase","faReact","faInfoCircle","faCode","faComment","map","tag","Link","to","kebabCase","className","key","icon","PostListing","getPostList","postEdges","this","props","postList","forEach","postEdge","push","path","node","fields","slug","title","frontmatter","summary","date","render","post","class","Component","data","edges"],"sourceRoot":""}