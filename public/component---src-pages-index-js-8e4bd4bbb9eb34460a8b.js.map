{"version":3,"file":"component---src-pages-index-js-8e4bd4bbb9eb34460a8b.js","mappings":"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","sources":["webpack://fbraza/./src/components/Posts.jsx","webpack://fbraza/./src/data/projects.js","webpack://fbraza/./src/pages/index.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport * as React from \"react\"\n\nconst Posts = ({ posts, groupByYears = false }) => {\n  function formatDate(date) {\n    const properDate = new Date(date)\n    return `${properDate.getUTCDate()} ${properDate.toLocaleString(\"default\", {\n      month: \"short\",\n    })}`\n  }\n\n  //   Re-organise if grouping by year\n  if (groupByYears) {\n    const postsByYear = {}\n\n    posts.forEach((post) => {\n      const year = new Date(post.frontmatter.date).getFullYear().toString()\n      postsByYear[year] = [...(postsByYear[year] || []), post]\n    })\n\n    const years = Object.keys(postsByYear).reverse()\n\n    return years.map((year) => (\n      <>\n        <h2\n          className=\"text-3xl font-semibold mb-8 text-slate-900 dark:text-slate-300\"\n          key={year}\n        >\n          {year}\n        </h2>\n        <div className=\"mb-12\">\n          <ul>\n            {postsByYear[year].map((node) => (\n              <li className=\"py-4 border-b border-gray-200 last:border-hidden dark:border-slate-700\">\n                <article key={node.id}>\n                  <Link\n                    to={`${node.fields.slug}`}\n                    className=\"flex justify-between items-center\"\n                  >\n                    <h2 className=\"text-lg text-slate-800 hover:text-blue-600 font-medium dark:text-slate-300 dark:hover:text-blue-500\">\n                      {node.frontmatter.title}\n                    </h2>\n                    <time className=\"text-sm text-slate-400 font-semibold dark:text-slate-500\">\n                      {formatDate(node.frontmatter.date)}\n                    </time>\n                  </Link>\n                </article>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </>\n    ))\n  } else {\n    return (\n      <div>\n        <ul>\n          {posts.map((node) => (\n            <li className=\"py-4 border-b border-gray-200 last:border-hidden dark:border-slate-700\">\n              <article key={node.id}>\n                <Link\n                  to={`${node.fields.slug}`}\n                  className=\"flex justify-between items-center\"\n                >\n                  <h2 className=\"text-lg text-slate-800 hover:text-blue-600 font-medium dark:text-slate-300 dark:hover:text-blue-500\">\n                    {node.frontmatter.title}\n                  </h2>\n                  <time className=\"text-sm text-slate-400 font-semibold dark:text-slate-500\">\n                    {formatDate(node.frontmatter.date)}\n                  </time>\n                </Link>\n              </article>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Posts\n","export const projects = [\n  {\n    name: \"python-tocase\",\n    description: \"A library to help recasing your strings.\",\n    source: \"https://github.com/fbraza/python-tocase\",\n  },\n  {\n    name: \"FruitDetect\",\n    description: \"A deep learning application to recognize fruits.\",\n    source: \"https://github.com/fbraza/FruitDetect\",\n  },\n  {\n    name: \"DFS-Lib\",\n    description: \"DFS-Lib is a scala flavoured api to the Hadoop java filesystem api.\",\n    source: \"https://github.com/fbraza/scala-dfs-lib\",\n  },\n  {\n    name: \"python-dataframe-skim\",\n    description: \"Get an extended statistic summary of your pandas DataFrame.\",\n    source: \"https://github.com/fbraza/python-dataframe-skim\",\n  },\n]\n","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Posts from \"../components/Posts\"\nimport Tags from \"../components/Tags\"\nimport { projects } from \"../data/projects\"\nimport { Seo } from \"../components/Seo\"\n\nconst IndexPage = ({ data }) => {\n  const latestPosts = data.latestPosts.nodes\n  const allTags = data.allTags.distinct\n\n  return (\n    <Layout>\n      <section>\n        <div className=\"container mx-auto pr-28\">\n          <h1 className=\"mb-8 text-6xl font-extrabold tracking-tight text-slate-900 dark:text-slate-300\">\n            Hi, I'm Faouzi ðŸ‘‹\n          </h1>\n          <p className=\"text-xl mb-6 leading-9 text-slate-700 dark:text-gray-400\">\n            I'm a data engineer with a sniff of DevOps who likes to build innovative\n            data software and pipelines data driven challenges. I'll talk here about\n            things I face during my work and will use this blog as a journal to myself.\n          </p>\n          <p className=\"text-xl mb-6 leading-9 text-slate-700 dark:text-gray-400\">\n            Feel free to read my <Link to={\"/articles\"} className=\"text-blue-600 hover:underline dark:text-blue-500\">posts</Link> or <Link to={\"/contact\"} className=\"text-blue-600 hover:underline dark:text-blue-500\">get in touch</Link>.\n          </p>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"container mx-auto mt-24\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-3xl font-semibold text-slate-900 dark:text-slate-300\">Latest</h2>\n          </div>\n          <div>\n            <Posts posts={latestPosts} />\n          </div>\n          <div className=\"mt-8\">\n            <Link to={\"/articles\"} className=\"text-sm text-slate-500 hover:underline hover:text-blue-600 dark:hover:text-blue-500 dark:text-slate-400\">\n              View more â†’\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"container mx-auto mt-20\">\n          <h2 className=\"text-3xl font-semibold mb-8 text-slate-900 dark:text-slate-300\">Explore</h2>\n          <div className=\"flex\">\n            <Tags tags={allTags} />\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"container mx-auto mt-20\">\n          <div>\n            <h2 className=\"text-3xl font-semibold mb-8 text-slate-900 dark:text-slate-300\">Projects</h2>\n          </div>\n          <div>\n            {projects.map((project) => {\n              return (\n                <div\n                  className=\"max-w-sm p-4 border rounded-md bg-slate-100 border-slate-300 shadow dark:bg-slate-700 dark:shadow-slate-600 dark:border-slate-500 dark:shadow-slate-700\"\n                  key={project.name}\n                >\n                  <h5 className=\"mb-2 text-xl font-bold dark:text-slate-300\">{project.name}</h5>\n                  <p className=\"mb-3 text-base dark:text-slate-400\">{project.description}</p>\n                  <a\n                    href={project.source}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"inline-flex items-center hover:underline hover:text-blue-600 dark:text-slate-300 dark:hover:text-blue-500\"\n                  >\n                    Source\n                    <svg\n                      className=\"w-5 h-5 ml-1\"\n                      fill=\"currentColor\"\n                      viewBox=\"0 0 20 20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path d=\"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z\"></path>\n                      <path d=\"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z\"></path>\n                    </svg>\n                  </a>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    latestPosts: allMarkdownRemark(\n      limit: 5\n      sort: { frontmatter: { date: DESC } }\n      filter: { fields: { contentType: { eq: \"post\" } } }\n    ) {\n      nodes {\n        frontmatter {\n          date\n          title\n        }\n        id\n        fields {\n          slug\n        }\n      }\n    }\n    allTags: allMarkdownRemark {\n      distinct(field: { frontmatter: { tags: SELECT } })\n    }\n  }\n`\n\nexport default IndexPage\n\nexport const Head = () => <Seo />\n"],"names":["_ref","posts","groupByYears","formatDate","date","properDate","Date","getUTCDate","toLocaleString","month","postsByYear","forEach","post","year","frontmatter","getFullYear","toString","concat","_toConsumableArray","Object","keys","reverse","map","React","className","key","node","id","Link","to","fields","slug","title","projects","name","description","source","data","latestPosts","nodes","allTags","distinct","Layout","Posts","Tags","tags","project","href","target","rel","fill","viewBox","xmlns","d","Head","Seo"],"sourceRoot":""}